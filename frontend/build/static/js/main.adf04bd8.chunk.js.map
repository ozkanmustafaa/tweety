{"version":3,"sources":["reportWebVitals.js","i18n.js","components/Input.js","components/ButtonWithProgress.js","shared/ApiProgress.js","redux/Constants.js","api/apiCalls.js","redux/authActions.js","pages/UserSignupPage.js","pages/LoginPage.js","components/LanguageSelector.js","components/Spinner.js","assets/profile.png","components/ProfileImageWithDefault.js","components/Modal.js","components/TweetyView.js","components/TweetyFeed.js","components/AutoUploadImage.js","components/TweetySubmit.js","components/UserListItem.js","components/UserList.js","pages/HomePage.js","components/ProfileCard.js","pages/UserPage.js","assets/tweety.png","components/TopBar.js","container/App.js","redux/authReducer.js","redux/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","i18n","use","initReactI18next","init","resources","en","translations","Username","Password","Login","Logout","Users","Next","Previous","Edit","Save","Cancel","tr","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","register","number","index","Input","props","label","error","name","onChange","type","defaultValue","className","undefined","ButtonWithProgress","onClick","pendingApiCall","disabled","text","useApiProgress","apiMethod","apiPath","strictPath","useState","setPendingApiCall","useEffect","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","response","config","eject","LOGOUT_SUCCESS","LOGIN_SUCCESS","UPDATE_SUCCESS","getUsers","page","size","get","setAuthorizationHeader","username","password","isLoggedIn","authorizationHeaderValue","btoa","defaults","headers","getUser","updateUser","body","put","postTweety","tweety","post","getTweeties","path","getOldTweeties","id","getNewTweetyCount","getNewTweeties","postTweetyAttachment","attachment","deleteTweety","delete","deleteUser","logoutSuccess","ACTIONS","loginSuccess","authState","payload","updateSuccess","displayName","image","loginHandler","credentials","dispatch","a","creds","auth","data","signupHandler","user","UserSignupPage","passwordRepeatError","passwordRepeat","form","setForm","errors","setErrors","useDispatch","event","target","value","previousErrors","previousForm","onClickSignup","preventDefault","history","push","validationErrors","t","useTranslation","usernameError","displayNameError","passwordError","pendingApiCallSignup","pendingApiCallLogin","LoginPage","setUsername","setPassword","setError","onClickLogin","message","buttonEnabled","LanguageSelector","onChangeLanguage","language","changeLanguage","src","height","width","alt","style","cursor","Spinner","ProfileImageWithDefault","tempimage","imageSource","defaultPicture","onError","Modal","visible","onClickCancel","onClickOk","title","okButton","backgroundColor","TweetyView","loggedInUser","useSelector","store","onDeleteTweety","content","timestamp","fileAttachment","modalVisible","setModalVisible","onClickDelete","formatted","format","ownedByLoggedInUser","to","class","fileType","TweetyFeed","last","tweetyPage","setTweetyPage","newTweetyCount","setNewTweetyCount","useParams","initialTweetyLoadProgress","lastTweetyId","firstTweetyId","length","lastTweetyIndex","oldTweetyPath","loadOldTweetiesProgress","newTweetyPath","loadNewTweetiesProgress","looper","setInterval","count","clearInterval","previousTweetyPage","loadTweeties","loadOldTweeties","loadNewTweeties","onDeleteTweetySuccess","filter","map","AutoUploadImage","uploading","position","opacity","TweetySubmit","focused","setFocused","setTweety","newImage","setNewImage","attachmentId","setAttachmentId","pendingFileUpload","onClickTweety","uploadFile","file","FormData","append","textAreaClass","rows","onFocus","files","fileReader","FileReader","onloadend","result","readAsDataURL","UserListItem","UserList","setPage","loadFailure","setLoadFailure","loadUsers","users","first","actionDiv","previousPage","nextPage","HomePage","ProfileCard","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","loggedInUsername","pathUsername","setUser","editable","setEditable","setValidationErrors","useHistory","previousValidationErrors","pendingapiCallDeleteUser","onClickSave","split","onClickDeleteUser","imageError","UserPage","notFound","setNotFound","loadUser","fontSize","TopBar","menuArea","useRef","menuVisible","setMenuVisible","document","addEventListener","menuClickTracker","removeEventListener","current","contains","links","dropDownClass","ref","logo","App","exact","component","defaultState","authReducer","state","action","secureLs","SecureLS","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","configureStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.adf04bd8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\r\nimport {initReactI18next} from 'react-i18next';\r\nimport {register} from 'timeago.js';\r\n\r\ni18n.use(initReactI18next).init({\r\n    resources: {\r\n        en: {\r\n            translations:{\r\n                'Sign Up': 'Sign Up',\r\n                'Password mismatch': 'Password mismatch',\r\n                Username: 'Username',\r\n                'Display Name': 'Display Name',\r\n                Password: 'Password',\r\n                'Password Repeat': 'Password Repeat',\r\n                Login: 'Login',\r\n                Logout: 'Logout',\r\n                Users: 'Users',\r\n                Next: 'next >',\r\n                Previous: '< previous',\r\n                'Load Failure': 'Load Failure',\r\n                'User Not Found': 'User Not Found',\r\n                Edit: 'Edit',\r\n                'Change Display Name': 'Change Display Name',\r\n                Save: 'Save',\r\n                Cancel: 'Cancel',\r\n                'My Profile': 'My Profile',\r\n                'There are no tweeties': 'There are no tweeties',\r\n                'Load old tweeties': 'Load old tweeties',\r\n                'There are new tweeties': 'There are new tweeties',\r\n                'Delete Tweety': 'Delete Tweety',\r\n                'Are you sure to delete tweety?': 'Are you sure to delete tweety?',\r\n                'Delete My Account': 'Delete My Account',\r\n                'Are you sure to delete your account?': 'Are you sure to delete your account?'\r\n            }\r\n        },\r\n        tr: {\r\n            translations: {\r\n                'Sign Up': 'Kayıt Ol',\r\n                'Password mismatch': 'Aynı şifreyi giriniz',\r\n                Username: 'Kullanıcı Adı',\r\n                'Display Name': 'Tercih Edilen İsim' ,\r\n                Password: 'Şifre',\r\n                'Password Repeat': 'Şifreyi Tekrarla',\r\n                Login: 'Sisteme Gir',\r\n                Logout: 'Çıkış',\r\n                Users: 'Kullanıcılar',\r\n                Next: 'sonraki >',\r\n                Previous: '< önceki',\r\n                'Load Failure': 'Liste Alınamadı',\r\n                'User Not Found': 'Kullanıcı Bulunamadı',\r\n                Edit: 'Düzenle',\r\n                'Change Display Name': 'Görünür İsminizi Değiştirin',\r\n                Save: 'Kaydet',\r\n                Cancel: 'İptal Et',\r\n                'My Profile': 'Hesabım',\r\n                'There are no tweeties': 'Tweety bulunamadı',\r\n                'Load old tweeties': 'Eski tweetyleri getir',\r\n                'There are new tweeties': 'Yeni tweetyler var',\r\n                'Delete Tweety': `Tweety'i sil`,\r\n                'Are you sure to delete tweety?': `Tweety'i silmek istediğinizden emin misiniz?`,\r\n                'Delete My Account': 'Hesabımı Sil',\r\n                'Are you sure to delete your account?': 'Hesabınızı silmek istediğinizden emin misiniz?'\r\n            }\r\n        }\r\n    },\r\n    fallbackLng: 'en',\r\n    ns: ['translations'],\r\n    defaultNS: ['translations'],\r\n    keySeparator: false,\r\n    interpolation:{\r\n        escapeValue: false,\r\n        formatSeparator: ','\r\n    },\r\n    react: {\r\n        wait: true\r\n    }\r\n})\r\n\r\nconst timeAgoTR = (number, index) => {\r\n    return [\r\n      ['az önce', 'şimdi'],\r\n      ['%s saniye önce', '%s saniye içinde'],\r\n      ['1 dakika önce', '1 dakika içinde'],\r\n      ['%s dakika önce', '%s dakika içinde'],\r\n      ['1 saat önce', '1 saat içinde'],\r\n      ['%s saat önce', '%s saat içinde'],\r\n      ['1 gün önce', '1 gün içinde'],\r\n      ['%s gün önce', '%s gün içinde'],\r\n      ['1 hafta önce', '1 hafta içinde'],\r\n      ['%s hafta önce', '%s hafta içinde'],\r\n      ['1 ay önce', '1 ay içinde'],\r\n      ['%s ay önce', '%s ay içinde'],\r\n      ['1 yıl önce', '1 yıl içinde'],\r\n      ['%s yıl önce', '%s yıl içinde'],\r\n    ][index];\r\n  }\r\n\r\nregister('tr', timeAgoTR);\r\n\r\nexport default i18n;","import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    const {label, error, name, onChange, type, defaultValue} = props\r\n    let className = 'form-control';\r\n\r\n    if(type == 'file'){\r\n        className += '-file';\r\n    }\r\n\r\n    if(error != undefined){\r\n        className += ' is-invalid';\r\n    }\r\n\r\n    return(\r\n        <div className = \"mb-3\">\r\n        <label>{label}</label>\r\n        <input className={className} name={name} onChange={onChange} type={type} defaultValue={defaultValue}/>\r\n        <div className=\"invalid-feedback\">{error}</div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst ButtonWithProgress = (props) => {\r\n\r\n    const {onClick, pendingApiCall, disabled, text, className} = props;\r\n    return (\r\n        <button className={className || \"btn btn-primary\"} onClick={onClick} disabled={disabled}>\r\n            {pendingApiCall && <span className=\"spinner-border spinner-border-sm\"></span>} {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ButtonWithProgress;","import {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n    const[pendingApiCall, setPendingApiCall] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let requestInterceptor, responseInterceptor;\r\n\r\n        const updateApiCallFor = (method, url, inProgress) => {\r\n            if(method != apiMethod){\r\n                return;\r\n            }\r\n            if(strictPath && url == apiPath){\r\n                setPendingApiCall(inProgress);\r\n            }\r\n            else if(!strictPath && url.startsWith(apiPath)){\r\n                setPendingApiCall(inProgress);\r\n            }\r\n        }\r\n\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                const {url, method} = request;\r\n                updateApiCallFor(method, url, true)\r\n                return request;\r\n            });\r\n        \r\n            responseInterceptor = axios.interceptors.response.use((response) => {\r\n                const {url, method} = response.config;\r\n                updateApiCallFor(method, url, false)\r\n                return response;\r\n            }, error => {\r\n                const {url, method} = error.config;\r\n                updateApiCallFor(method, url, false)\r\n                throw error;\r\n            });\r\n        }\r\n\r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.request.eject(responseInterceptor);\r\n        }\r\n        \r\n        registerInterceptors();\r\n\r\n        return function unmount(){\r\n            unregisterInterceptors();\r\n        }\r\n    },[apiPath, apiMethod, strictPath]);\r\n\r\n    return pendingApiCall;\r\n}","export const LOGOUT_SUCCESS = 'logout-success';\r\nexport const LOGIN_SUCCESS = 'login-success';\r\nexport const UPDATE_SUCCESS = 'update-success';","import axios from 'axios';\r\n\r\nexport const signup = (body) => {\r\n    return axios.post('/api/1.0/users', body);\r\n};  \r\n\r\nexport const login = creds => {\r\n    return axios.post('/api/1.0/auth', {}, {auth : creds});\r\n}\r\n\r\nexport const changeLanguage = language => {\r\n    axios.defaults.headers['accept-language'] = language;\r\n}\r\n\r\nexport const getUsers = (page = 0, size = 3) => {\r\n    return axios.get(`/api/1.0/users?page=${page}&size=${size}`);\r\n}\r\n\r\nexport const setAuthorizationHeader = ({username, password, isLoggedIn}) => {\r\n    if(isLoggedIn){\r\n        const authorizationHeaderValue = `Basic ${btoa(username + ':' + password)}`\r\n        axios.defaults.headers['Authorization'] = authorizationHeaderValue;\r\n    }\r\n    else{\r\n        delete axios.defaults.headers['Authorization'];\r\n    }\r\n}\r\n\r\nexport const getUser = username => {\r\n    return axios.get(`/api/1.0/users/${username}`);\r\n}\r\n\r\nexport const updateUser = (username, body) => {\r\n    return axios.put(`/api/1.0/users/${username}`, body);\r\n}\r\n\r\nexport const postTweety = (tweety) => {\r\n    return axios.post('/api/1.0/tweeties/', tweety);\r\n}\r\n\r\nexport const getTweeties = (username, page = 0) => {\r\n    const path = username ? `/api/1.0/users/${username}/tweeties/?page=` : '/api/1.0/tweeties/?page=';\r\n    return axios.get( path + page);\r\n}\r\n\r\nexport const getOldTweeties = (id, username) => {\r\n    const path = username ? `/api/1.0/users/${username}/tweeties/${id}` : `/api/1.0/tweeties/${id}`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const getNewTweetyCount = (id, username) => {\r\n    const path = username ? `/api/1.0/users/${username}/tweeties/${id}?count=true` : `/api/1.0/tweeties/${id}?count=true`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const getNewTweeties = (id, username) => {\r\n    const path = username ? `/api/1.0/users/${username}/tweeties/${id}?direction=after` : `/api/1.0/tweeties/${id}?direction=after`;\r\n    return axios.get(path);\r\n}\r\n\r\nexport const postTweetyAttachment = (attachment) => {\r\n    return axios.post('/api/1.0/tweety-attachments', attachment);\r\n}\r\n\r\nexport const deleteTweety = (id) => {\r\n    return axios.delete(`/api/1.0/tweeties/${id}`);\r\n}\r\n\r\nexport const deleteUser = (username) => {\r\n    return axios.delete(`/api/1.0/users/${username}`);\r\n}","import * as ACTIONS from './Constants'\r\nimport {login, signup} from '../api/apiCalls'\r\n\r\nexport const logoutSuccess = () => {\r\n    return{\r\n        type: ACTIONS.LOGOUT_SUCCESS\r\n    };\r\n}\r\n\r\nexport const loginSuccess = (authState) => {\r\n    return{\r\n        type: ACTIONS.LOGIN_SUCCESS,\r\n        payload: authState\r\n        };\r\n        \r\n};\r\n\r\nexport const updateSuccess = ({displayName, image}) => {\r\n    return{\r\n        type: ACTIONS.UPDATE_SUCCESS,\r\n        payload: {\r\n            displayName, image\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginHandler = (credentials) => {\r\n    return async function(dispatch){\r\n        const response = await login(credentials);\r\n        const authState = {\r\n            ...response.data,\r\n            password: credentials.password\r\n        }\r\n        dispatch(loginSuccess(authState));\r\n        return response;\r\n    }\r\n}\r\n\r\nexport const signupHandler = (user) => {\r\n    return async function(dispatch){\r\n        const response = await signup(user);\r\n        await dispatch(loginHandler(user));\r\n        return response;\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport {useTranslation} from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress'\r\nimport {useApiProgress} from '../shared/ApiProgress';\r\nimport {useDispatch} from 'react-redux';\r\nimport {signupHandler} from '../redux/authActions'\r\n\r\nconst UserSignupPage = (props) => {\r\n    const [form, setForm] = useState({\r\n        username: null,\r\n        displayName: null,\r\n        password: null,\r\n        passwordRepeat: null,\r\n    })\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        setErrors((previousErrors) => ({... previousErrors, [name]: undefined}));\r\n        setForm((previousForm) => ({... previousForm, [name]: value}));\r\n    };\r\n\r\n    const onClickSignup = async event => {\r\n        event.preventDefault();\r\n\r\n        const {history} = props;\r\n        const {push} = history;\r\n\r\n        const{username, displayName, password} = form;\r\n\r\n        const body = {\r\n            username,\r\n            displayName,\r\n            password\r\n        };\r\n\r\n        try{\r\n            await dispatch(signupHandler(body));\r\n            push('/');\r\n        } catch (error){\r\n            if(error.response.data.validationErrors){\r\n                setErrors(error.response.data.validationErrors);\r\n            }\r\n        }\r\n    };\r\n\r\n    const {t} = useTranslation();\r\n    \r\n    const {username: usernameError, displayName: displayNameError, password: passwordError} = errors;\r\n    const pendingApiCallSignup = useApiProgress('post', '/api/1.0/users');\r\n    const pendingApiCallLogin = useApiProgress('post', '/api/1.0/auth');\r\n\r\n    const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n    let passwordRepeatError;\r\n    if(form.password != form.passwordRepeat){\r\n        passwordRepeatError = t('Password mismatch');\r\n    }\r\n\r\n    return(\r\n        <div className = \"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t('Sign Up')}</h1>\r\n                <Input name=\"username\" label={t(\"Username\")} error={usernameError} onChange={onChange} />\r\n                <Input name=\"displayName\" label={t(\"Display Name\")} error={displayNameError} onChange={onChange} />\r\n                <Input name=\"password\" label={t(\"Password\")} error={passwordError} onChange={onChange} type=\"password\" />\r\n                <Input name=\"passwordRepeat\" label={t(\"Password Repeat\")} error={passwordRepeatError} onChange={onChange} type=\"password\" />\r\n                <div className=\"text-center\">\r\n                    <ButtonWithProgress \r\n                    onClick={onClickSignup} \r\n                    disabled={pendingApiCall || passwordRepeatError != undefined}\r\n                    pendingApiCall={pendingApiCall}\r\n                    text={t('Sign Up')}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserSignupPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport {useTranslation} from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress'\r\nimport {useApiProgress} from '../shared/ApiProgress';\r\nimport {useDispatch} from 'react-redux';\r\nimport {loginHandler} from '../redux/authActions'\r\n\r\nconst LoginPage = (props) => {\r\n    const [username, setUsername] =  useState();\r\n    const [password, setPassword] =  useState();\r\n    const [error, setError] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // username ya da password değiştiğinde statedeki erroru undefined yap.\r\n    useEffect(() => {\r\n        setError(undefined)\r\n    }, [username, password])\r\n\r\nconst onClickLogin = async event => {\r\n    event.preventDefault();\r\n    const creds = {\r\n        username: username,\r\n        password: password\r\n    };\r\n\r\n    const {history} = props;\r\n    const {push} = history;\r\n\r\n    setError(undefined);\r\n    try{\r\n        await dispatch(loginHandler(creds))\r\n        push('/');\r\n    }\r\n    catch(apiError){\r\n        setError(apiError.response.data.message);\r\n    }\r\n}\r\n\r\nconst {t} = useTranslation();\r\n\r\nconst pendingApiCall = useApiProgress('post', '/api/1.0/auth');\r\n\r\nconst buttonEnabled = username && password;\r\nreturn (\r\n    <div className=\"container\">\r\n        <form>\r\n            <h1 className=\"text-center\">{t('Login')}</h1>\r\n            <Input label={t(\"Username\")} onChange={event =>  setUsername(event.target.value)} />\r\n            <Input label={t(\"Password\")} type=\"password\" onChange={event => setPassword(event.target.value)} />\r\n            {error && <div className=\"alert alert-danger\">\r\n                {error}\r\n            </div>}\r\n            <div className=\"text-center\">\r\n                <ButtonWithProgress\r\n                onClick={onClickLogin} \r\n                disabled={!buttonEnabled || pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text = {t('Login')}/>\r\n            </div>\r\n        </form>\r\n    </div>\r\n);\r\n\r\n}\r\n\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {changeLanguage} from '../api/apiCalls';\r\n\r\nconst LanguageSelector = (props) => {\r\nconst {i18n} = useTranslation();\r\n\r\n    const onChangeLanguage = language => {\r\n        i18n.changeLanguage(language);\r\n        changeLanguage(language);\r\n    }\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        <img src=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/TR.svg\" height=\"50px\" width=\"50px\" alt=\"Turkish Flag\" onClick={() => onChangeLanguage('tr')} style={{cursor: 'pointer'}}></img>\r\n        <img className=\"ml-1\" src=\"https://purecatamphetamine.github.io/country-flag-icons/3x2/US.svg\" height=\"50px\" width=\"50px\" alt=\"USA Flag\" onClick={() => onChangeLanguage('en')} style={{cursor: 'pointer'}}></img>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default LanguageSelector;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-black-50\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/profile.06c30927.png\";","import React from 'react';\r\nimport defaultPicture from '../assets/profile.png';\r\n\r\nconst ProfileImageWithDefault = (props) => {\r\n    const {image, tempimage} = props;\r\n    let imageSource = defaultPicture;\r\n    if(image){\r\n        imageSource = 'images/profile/' + image;\r\n    }\r\n    return <img className='rounded-circle' \r\n    width=\"32\" height=\"32\" \r\n    alt={`Profile`} src={tempimage || imageSource} {... props}\r\n    onError={(event) => {\r\n        event.target.src = defaultPicture\r\n    }}\r\n    />\r\n\r\n};\r\n\r\nexport default ProfileImageWithDefault;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\n\r\nconst Modal = (props) => {\r\n    const {visible, onClickCancel, message, onClickOk, pendingApiCall, title, okButton} = props;\r\n    const {t} = useTranslation();\r\n\r\n    let className='modal fade';\r\n    if(visible){\r\n        className += 'show d-block'\r\n    }\r\n\r\n    return (\r\n        <div className={className} style={{backgroundColor: '#000000b0'}}>\r\n        <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">{title}</h5>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <p>{message}</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <ButtonWithProgress \r\n                    className=\"btn btn-danger\" \r\n                    onClick={onClickOk} \r\n                    pendingApiCall={pendingApiCall}\r\n                    disabled={pendingApiCall}\r\n                    text={okButton} \r\n                />\r\n                <button className=\"btn btn-secondary\" onClick={onClickCancel} disabled={pendingApiCall}>{t('Cancel')}</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport {Link} from 'react-router-dom';\r\nimport {format} from 'timeago.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport { deleteTweety } from '../api/apiCalls';\r\nimport Modal from './Modal';\r\nimport {useApiProgress} from '../shared/ApiProgress';\r\n\r\nconst TweetyView = (props) => {\r\n    const loggedInUser = useSelector(store => store.username)\r\n    const {tweety, onDeleteTweety} = props;\r\n    const {user, content, timestamp, fileAttachment, id} = tweety;\r\n    const {username, displayName, image} = user;\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('delete', `/api/1.0/tweeties/${id}`, true);\r\n\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const onClickDelete = async () => {\r\n        await deleteTweety(id);\r\n        onDeleteTweety(id);\r\n    };\r\n\r\n    const onClickCancel = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const formatted = format(timestamp, i18n.language);\r\n\r\n    const ownedByLoggedInUser = loggedInUser == username;\r\n\r\n    return(\r\n    <>\r\n        <div className=\"card p-1\"> \r\n            <div className=\"d-flex \">\r\n                <ProfileImageWithDefault image={image} className=\"rounded-circle m-1\" width=\"32\" height=\"32\" />\r\n                <div className=\"flex-fill m-auto pl-2\">\r\n                    <Link to={`/user/${username}`} className=\"text-dark\">\r\n                        <h6 className=\"d-inline\">\r\n                            {displayName}@{username}\r\n                        </h6>\r\n                        <span> - </span>\r\n                        <span> {formatted} </span>\r\n                    </Link>\r\n                </div>\r\n                {ownedByLoggedInUser && <button className=\"btn btn-delete-link btn-sm\" onClick={() => setModalVisible(true)}>\r\n                    <span class=\"material-icons\">delete_outline</span>\r\n                </button>}\r\n            </div>\r\n            <div className=\"pl-5\">{content}</div>\r\n            {fileAttachment && (\r\n                <div className=\"pl-5\">\r\n                    {fileAttachment.fileType.startsWith('image') && (\r\n                    <img className=\"img-fluid\" src={'images/attachments/' + fileAttachment.name} alt={content} />\r\n                    )}\r\n                    {!fileAttachment.fileType.startsWith('image') && (\r\n                        <strong>Tweety has unknown attachment</strong>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    <Modal \r\n        visible={modalVisible} \r\n        title={t('Delete Tweety')} \r\n        okButton={t('Delete Tweety')}\r\n        onClickCancel={onClickCancel} \r\n        onClickOk={onClickDelete} \r\n        pendingApiCall={pendingApiCall}\r\n            message={\r\n                <div>\r\n                    <div>\r\n                        <strong>{t('Are you sure to delete tweety?')}</strong>\r\n                    </div>\r\n                    <span>{content}</span>\r\n                </div>\r\n            }\r\n    />\r\n    </>\r\n    );\r\n};\r\n\r\nexport default TweetyView;","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {getNewTweeties, getNewTweetyCount, getOldTweeties, getTweeties} from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from './Spinner';\r\nimport TweetyView from './TweetyView';\r\nimport { useParams } from 'react-router';\r\n\r\n\r\nconst TweetyFeed = () => {\r\n    const [tweetyPage, setTweetyPage] = useState({ content: [], last: true, number: 0});\r\n    const [newTweetyCount, setNewTweetyCount] = useState(0);\r\n    const {t} = useTranslation();\r\n    const {username} = useParams();\r\n\r\n    const path = username ? `/api/1.0/users/${username}/tweeties/?page=` : '/api/1.0/tweeties/?page=';\r\n    const initialTweetyLoadProgress = useApiProgress('get', path)\r\n\r\n    let lastTweetyId = 0;\r\n    let firstTweetyId = 0;\r\n    if(tweetyPage.content.length > 0){\r\n        firstTweetyId = tweetyPage.content[0].id;\r\n        const lastTweetyIndex = tweetyPage.content.length - 1;\r\n        lastTweetyId = tweetyPage.content[lastTweetyIndex].id;\r\n    }\r\n\r\n    const oldTweetyPath = username ? `/api/1.0/users/${username}/tweeties/${lastTweetyId}` : `/api/1.0/tweeties/${lastTweetyId}`;\r\n    const loadOldTweetiesProgress = useApiProgress('get', oldTweetyPath, true);\r\n\r\n    const newTweetyPath = username ? `/api/1.0/users/${username}/tweeties/${firstTweetyId}?direction=after` : `/api/1.0/tweeties/${firstTweetyId}?direction=after`;\r\n\r\n    const loadNewTweetiesProgress = useApiProgress('get', newTweetyPath, true);\r\n\r\n    useEffect(() => {\r\n        const getCount = async () => {\r\n            const response = await getNewTweetyCount(firstTweetyId, username);\r\n            setNewTweetyCount(response.data.count);\r\n        };\r\n        let looper = setInterval(getCount, 1000);\r\n        return function cleanup(){\r\n            clearInterval(looper);\r\n        }\r\n    }, [firstTweetyId, username]);\r\n\r\n    useEffect(() => {\r\n        const loadTweeties = async (page) => {\r\n            try{\r\n                const response = await getTweeties(username, page);\r\n                setTweetyPage(previousTweetyPage => ({\r\n                    ... response.data,\r\n                    content: [... previousTweetyPage.content, ... response.data.content]\r\n                }));\r\n            } catch(error){}\r\n        };\r\n        loadTweeties();\r\n    }, [username]);\r\n\r\n    const loadOldTweeties = async () => {\r\n        const response = await getOldTweeties(lastTweetyId, username);\r\n        setTweetyPage(previousTweetyPage => ({\r\n            ... response.data,\r\n            content: [... previousTweetyPage.content, ... response.data.content]\r\n        }));\r\n    }\r\n\r\n    const loadNewTweeties = async () => {\r\n        const response = await getNewTweeties(firstTweetyId, username);\r\n        setTweetyPage(previousTweetyPage => ({\r\n            ... previousTweetyPage,\r\n            content: [... response.data, ... previousTweetyPage.content]\r\n        }));\r\n        setNewTweetyCount(0);\r\n    }\r\n\r\n    const onDeleteTweetySuccess = id => {\r\n        setTweetyPage(previousTweetyPage => ({\r\n            ...previousTweetyPage,\r\n            content: previousTweetyPage.content.filter(tweety => tweety.id != id)\r\n        }));\r\n    }\r\n\r\n    const {content, last} = tweetyPage;\r\n\r\n    if (content.length == 0){\r\n        return <div className=\"alert alert-secondary text-center\">{initialTweetyLoadProgress ? <Spinner /> : t('There are no tweeties')}</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {newTweetyCount > 0 && (\r\n            <div \r\n                className=\"alert alert-secondary text-center mb-1\"\r\n                style={{cursor: loadNewTweetiesProgress ? 'not-allowed' : 'pointer'}} \r\n                onClick={loadNewTweetiesProgress ? () => {} : loadNewTweeties}>\r\n                {loadNewTweetiesProgress ? <Spinner /> : t('There are new tweeties')}\r\n            </div>)}\r\n            {content.map(tweety => {\r\n                return <TweetyView key={tweety.id} tweety={tweety} onDeleteTweety={onDeleteTweetySuccess} />\r\n            })}\r\n            {!last && (\r\n                <div \r\n                    className=\"alert alert-secondary text-center\" \r\n                    style={{cursor: loadOldTweetiesProgress ? 'not-allowed' : 'pointer'}} \r\n                    onClick={loadOldTweetiesProgress ? () => {} : loadOldTweeties}>\r\n                    {loadOldTweetiesProgress ? <Spinner /> : t('Load old tweeties')}\r\n                </div>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TweetyFeed;","import React from 'react';\r\nimport './AutoUploadImage.css';\r\n\r\nconst AutoUploadImage = ({image, uploading}) => {\r\n    return (\r\n        <div style={{position: 'relative'}}>\r\n            <img className=\"img-thumbnail\" src={image} alt=\"tweety-attachment\" />\r\n            <div className=\"overlay\" style={{opacity: uploading ? 1 : 0}} >\r\n                <div className=\"d-flex justify-content-center h-100\">\r\n                    <div className=\"spinner-border text-light m-auto\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AutoUploadImage;","import React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport {postTweety, postTweetyAttachment} from '../api/apiCalls'\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport Input from './Input';\r\nimport AutoUploadImage from './AutoUploadImage';\r\n\r\nconst TweetySubmit = () => {\r\n    const {image} = useSelector(store => ({image: store.image}));\r\n    const [focused, setFocused] = useState(false);\r\n    const [tweety, setTweety] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [newImage, setNewImage] = useState();\r\n    const [attachmentId, setAttachmentId] = useState();\r\n    const {t} = useTranslation();\r\n\r\n    useEffect(() => {\r\n        if(!focused){\r\n            setTweety('');\r\n            setErrors({});\r\n            setNewImage();\r\n            setAttachmentId();\r\n        }\r\n    }, [focused]);\r\n\r\n    useEffect(() => {\r\n        setErrors({});\r\n    }, [tweety]);\r\n\r\n    const pendingApiCall = useApiProgress('post', '/api/1.0/tweeties', true);\r\n    const pendingFileUpload = useApiProgress('post', '/api/1.0/tweety-attachments', true);\r\n\r\n    const onClickTweety = async () => {\r\n        const body = {\r\n            content: tweety,\r\n            attachmentId: attachmentId\r\n        }\r\n        try{\r\n            await postTweety(body);\r\n            setFocused(false);\r\n        } catch(error){\r\n            if(error.response.data.validationErrors){\r\n                setErrors(error.response.data.validationErrors);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangeFile = (event) => {\r\n        if( event.target.files.length < 1 ) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n            uploadFile(file);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }\r\n\r\n    const uploadFile = async (file) => {\r\n        const attachment = new FormData();\r\n        attachment.append('file', file);\r\n        const response = await postTweetyAttachment(attachment);\r\n        setAttachmentId(response.data.id);\r\n    }\r\n\r\n    let textAreaClass = 'form-control';\r\n    if(errors.content){\r\n        textAreaClass += ' is-invalid';\r\n    }\r\n\r\n    return (\r\n        <div className=\"card p-1 flex-row\">\r\n            <ProfileImageWithDefault image={image} className=\"rounded-circle mr-1\" />\r\n            <div className=\"flex-fill\">\r\n                <textarea className={textAreaClass} \r\n                rows={focused ? \"3\" : \"1\"} \r\n                onFocus={() => {setFocused(true)}}\r\n                onChange={event => setTweety(event.target.value)}\r\n                value={tweety} />\r\n                <div className=\"invalid-feedback\">{errors.content}</div>\r\n                {focused && (\r\n                    <>\r\n                        {!newImage && (<Input type=\"file\" onChange={onChangeFile}/>)}\r\n                        {newImage && <AutoUploadImage image={newImage} uploading={pendingFileUpload}/>}\r\n                        <div className=\"text-right mt-1\">\r\n                        <ButtonWithProgress \r\n                        className=\"btn btn-primary\" \r\n                        onClick={onClickTweety} \r\n                        text=\"Tweety\"\r\n                        pendingApiCall={pendingApiCall}\r\n                        disabled={pendingApiCall || pendingFileUpload}\r\n                        />\r\n                        <button \r\n                                className=\"btn btn-light d-inline-flex ml-1\" \r\n                                onClick={() => setFocused(false)}\r\n                                disabled={pendingApiCall || pendingFileUpload}>\r\n                                <span className=\"material-icons\">close</span>\r\n                                {t('Cancel')}\r\n                        </button>\r\n                    </div>\r\n                </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TweetySubmit;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst UserListItem = (props) => {\r\n    const {user} = props;\r\n    const{username, displayName, image} = user;\r\n\r\n    return (\r\n        <Link to={`/user/${username}`} className='list-group-item list-group-item-action'>\r\n            <ProfileImageWithDefault \r\n            className='rounded-circle' \r\n            width=\"32\" \r\n            height=\"32\" \r\n            alt={`${username} profile`} image={image} />\r\n            <span className=\"pl-2\">\r\n                {displayName}@{username}\r\n            </span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default UserListItem;","import React, {useEffect, useState} from 'react';\r\nimport {getUsers} from '../api/apiCalls';\r\nimport {useTranslation} from 'react-i18next';\r\nimport UserListItem from './UserListItem'\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from './Spinner';\r\n\r\nconst UserList = () => {\r\n    \r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        size: 3,\r\n        number: 0\r\n    });\r\n\r\n    const [loadFailure, setLoadFailure] = useState(false);\r\n\r\n    const pendingApiCall = useApiProgress('get', '/api/1.0/users?page');\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadUsers(nextPage);\r\n    }\r\n\r\n    \r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadUsers(previousPage);\r\n    }\r\n\r\n    const loadUsers = async page => {\r\n        setLoadFailure(false);\r\n        try{\r\n            const response = await getUsers(page)\r\n            setPage(response.data);\r\n\r\n        } catch(error){\r\n            setLoadFailure(true);\r\n        }\r\n    }\r\n\r\n    const {t} = useTranslation();\r\n    const {content: users, last, first} = page;\r\n    \r\n    let actionDiv = (\r\n        <div>\r\n            {first == false && (\r\n            <button className=\"btn btn-sm btn-light\" onClick={onClickPrevious}>\r\n                {t('Previous')}\r\n            </button>\r\n            )}\r\n            {last == false && (\r\n            <button className=\"btn btn-sm btn-light float-right\" onClick={onClickNext}>\r\n                {t('Next')}\r\n            </button>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    if(pendingApiCall){\r\n        actionDiv = (\r\n            <Spinner />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <h3 className=\"card-header text-center\">{t('Users')}</h3>\r\n            <div className='list-group-flush'>\r\n                {users.map((user) => (\r\n                    <UserListItem key={user.username} user={user} />\r\n                ))}\r\n            </div>\r\n            {actionDiv}\r\n            {loadFailure && <div className=\"text-center text-danger\">{t('Load Failure')}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TweetyFeed from '../components/TweetyFeed';\r\nimport TweetySubmit from '../components/TweetySubmit';\r\nimport UserList from '../components/UserList';\r\n\r\nconst HomePage = () => {\r\n    const {isLoggedIn} = useSelector(store => ({isLoggedIn: store.isLoggedIn}))\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\"> \r\n                    {isLoggedIn && \r\n                    <div className=\"mb-1\">\r\n                        <TweetySubmit />\r\n                    </div>\r\n                    }\r\n                    <TweetyFeed />\r\n                </div>\r\n                <div className=\"col\"> <UserList /> </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React, { useEffect, useState } from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from './Input';\r\nimport {updateUser, deleteUser} from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport {logoutSuccess, updateSuccess} from '../redux/authActions';\r\nimport Modal from './Modal';\r\n\r\nconst ProfileCard = props => {\r\n    const [inEditMode, setInEditMode] = useState(false);\r\n    const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n    const {username:loggedInUsername} = useSelector((store) => ({username: store.username}));\r\n    const routeParams = useParams();\r\n    const pathUsername =routeParams.username;\r\n    const [user, setUser] = useState({})\r\n    const [editable, setEditable] = useState(false);\r\n    const [newImage, setNewImage] = useState();\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setUser(props.user)\r\n    },[props.user])\r\n\r\n    useEffect(() => {\r\n        setEditable(pathUsername == loggedInUsername)\r\n    }, [pathUsername, loggedInUsername])\r\n\r\n    useEffect(() => {\r\n        setValidationErrors((previousValidationErrors) => ({\r\n            ... previousValidationErrors,\r\n            displayName: undefined\r\n            })\r\n        );\r\n    }, [updatedDisplayName])\r\n\r\n    useEffect(() => {\r\n        setValidationErrors((previousValidationErrors) => ({\r\n            ... previousValidationErrors,\r\n            image: undefined\r\n            })\r\n        );\r\n    }, [newImage])\r\n\r\n    const {username, displayName, image} = user;\r\n\r\n    const pendingapiCallDeleteUser = useApiProgress('delete', `/api/1.0/users/${username}`, true);\r\n\r\n    const {t} = useTranslation();\r\n\r\n    useEffect(() => {\r\n        if(!inEditMode){\r\n            setUpdatedDisplayName(undefined);\r\n            setNewImage(undefined);\r\n        } else {\r\n            setUpdatedDisplayName(displayName);\r\n        }\r\n    }, [inEditMode, displayName])\r\n\r\n    const onClickSave = async () => {\r\n        let image;\r\n        if(newImage){\r\n            image = newImage.split(',')[1]\r\n        }\r\n\r\n        const body = {\r\n            displayName: updatedDisplayName,\r\n            image\r\n        }\r\n        try {\r\n            const response = await updateUser(username, body);\r\n            setInEditMode(false);\r\n            setUser(response.data);\r\n            dispatch(updateSuccess(response.data));\r\n        } catch (error) {\r\n            setValidationErrors(error.response.data.validationErrors)\r\n        }\r\n    }\r\n\r\n    const onChangeFile = (event) => {\r\n        if( event.target.files.length < 1 ) {\r\n            return;\r\n        }\r\n        const file = event.target.files[0];\r\n        const fileReader = new FileReader();\r\n        fileReader.onloadend = () => {\r\n            setNewImage(fileReader.result);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n\r\n    }\r\n\r\n    const onClickCancel = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    const onClickDeleteUser = async () => {\r\n        await deleteUser(username);\r\n        setModalVisible(false);\r\n        dispatch(logoutSuccess());\r\n        history.push('/');\r\n    }\r\n\r\n    const pendingApiCall = useApiProgress('put', '/api/1.0/users/' + username)\r\n    const{displayName: displayNameError, image: imageError} = validationErrors;\r\n\r\n    return <div className=\"card text-center\">\r\n        <div className=\"card-header\">\r\n            <ProfileImageWithDefault \r\n            className='rounded-circle shadow' \r\n            width=\"200\" height=\"200\" \r\n            alt={`${username} profile`} \r\n            image={image}\r\n            tempimage={newImage}\r\n            />\r\n        </div>\r\n        <div className=\"card-body\">\r\n            {!inEditMode &&\r\n            (\r\n            <> \r\n                <h3>\r\n                    {displayName}@{username}\r\n                </h3>\r\n                {editable && (\r\n                <>\r\n                <button className=\"btn btn-success d-inline-flex\" onClick={() => setInEditMode(true)}>\r\n                    <span className=\"material-icons\">edit</span>\r\n                    {t('Edit')}\r\n                </button>\r\n                <div className=\"pt-2\"></div>\r\n                <button className=\"btn btn-danger d-inline-flex\" onClick={() => setModalVisible(true)}>\r\n                    <span className=\"material-icons\">directions_run</span>                    \r\n                    {t('Delete My Account')}\r\n                </button>\r\n                </>\r\n                )}\r\n            </>\r\n            )}\r\n            {inEditMode &&(\r\n                <div> \r\n                    <Input label={t(\"Change Display Name\")} defaultValue={displayName} onChange={(event) => {setUpdatedDisplayName(event.target.value)}} error={displayNameError} />\r\n                    <Input type=\"file\" onChange={onChangeFile} error={imageError} />\r\n                    <div> \r\n                        <ButtonWithProgress \r\n                            className=\"btn btn-primary d-inline-flex\" \r\n                            onClick={onClickSave}\r\n                            disabled={pendingApiCall}\r\n                            pendingApiCall={pendingApiCall}\r\n                            text={\r\n                                <>\r\n                                <span className=\"material-icons\">save</span>\r\n                                {t('Save')}\r\n                                </>\r\n                            }\r\n                        />\r\n                        <button \r\n                            className=\"btn btn-light d-inline-flex ml-1\" \r\n                            onClick={() => setInEditMode(false)}\r\n                            disabled={pendingApiCall}>\r\n                            <span className=\"material-icons\">close</span>\r\n                            {t('Cancel')}\r\n                        </button>\r\n                    </div> \r\n                </div>\r\n            )}\r\n        </div>\r\n        <Modal \r\n            visible={modalVisible} \r\n            title={t('Delete My Account')}\r\n            okButton={t('Delete My Account')}\r\n            onClickCancel={onClickCancel} \r\n            onClickOk={onClickDeleteUser} \r\n            pendingApiCall={pendingapiCallDeleteUser}\r\n            message={t('Are you sure to delete your account?')}\r\n        />\r\n    </div>\r\n};\r\n\r\nexport default ProfileCard;","import React, { useEffect, useState } from 'react';\r\nimport ProfileCard from '../components/ProfileCard'\r\nimport {getUser} from '../api/apiCalls';\r\nimport { useParams } from 'react-router';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useApiProgress} from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner';\r\nimport TweetyFeed from '../components/TweetyFeed';\r\n\r\nconst UserPage = () => {\r\n    const [user, setUser] = useState({});\r\n    const [notFound, setNotFound] = useState(false);\r\n\r\n    const {username} = useParams();\r\n\r\n    const {t} = useTranslation();\r\n\r\n    const pendingApiCall = useApiProgress('get', '/api/1.0/users/' + username, true);\r\n\r\n    useEffect(() => {\r\n        setNotFound(false)\r\n    }, [user])\r\n\r\n    useEffect (() => {\r\n        const loadUser = async () => {\r\n            try{\r\n                const response = await getUser(username)\r\n                setUser(response.data)\r\n            }catch(error){\r\n                setNotFound(true);\r\n            }\r\n        }\r\n        loadUser();\r\n    }, [username]);\r\n\r\n    if(notFound){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"alert alert-danger text-center\">\r\n                    <div>\r\n                        <span class=\"material-icons\" style={{fontSize: '48px'}}>\r\n                            error\r\n                        </span>\r\n                    </div>\r\n                    {t('User Not Found')}</div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    if(pendingApiCall || user.username != username){\r\n        return (\r\n            <Spinner />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <ProfileCard user={user} />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <TweetyFeed />\r\n                </div>\r\n            </div>\r\n        </div>);\r\n};\r\n\r\nexport default UserPage;","export default __webpack_public_path__ + \"static/media/tweety.d9a3d384.png\";","import React, { useEffect, useRef, useState } from 'react';\r\nimport logo from '../assets/tweety.png';\r\nimport {Link} from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {logoutSuccess} from '../redux/authActions'\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst TopBar = (props) => {\r\n    \r\n    const {t} = useTranslation();\r\n    const {username, isLoggedIn, displayName, image} = useSelector((store) => ({\r\n        isLoggedIn: store.isLoggedIn,\r\n        username: store.username,\r\n        displayName: store.displayName,\r\n        image: store.image\r\n    }));\r\n\r\n    const menuArea = useRef(null);\r\n\r\n    const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', menuClickTracker)\r\n        return () => {\r\n            document.removeEventListener('click', menuClickTracker)\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n    const menuClickTracker = (event) => {\r\n        if(menuArea.current == null || !menuArea.current.contains(event.target)){\r\n            setMenuVisible(false);\r\n        }\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onLogoutSuccess = () => {\r\n        dispatch(logoutSuccess());\r\n    }\r\n    \r\n    let links = (\r\n        <ul className=\"navbar-nav ml-auto\">\r\n        <li>\r\n            <Link className=\"nav-link\" to=\"/login\" >\r\n                {t('Login')}\r\n            </Link>  \r\n        </li>\r\n        <li>\r\n            <Link className=\"nav-link\" to=\"/signup\">\r\n                {t('Sign Up')}\r\n            </Link>  \r\n        </li>\r\n    </ul>\r\n    )\r\n    if(isLoggedIn){ \r\n        let dropDownClass = 'dropdown-menu p-0 shadow';\r\n        if(menuVisible){\r\n            dropDownClass += ' show'\r\n        }\r\n        links = (            \r\n        <ul className=\"navbar-nav ml-auto\" ref={menuArea}>\r\n            <li className=\"nav-item dropdown\">\r\n                <div className=\"d-flex\" style={{cursor: 'pointer'}} onClick={() => setMenuVisible(true)}>\r\n                    <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle m-auto\"/>\r\n                    <span className=\"nav-link dropdown-toggle\">{displayName}</span>\r\n                </div>\r\n                <div className={dropDownClass}>\r\n                    <Link className=\"dropdown-item d-flex p-2\" to={`/user/${username}`} onClick={() => {setMenuVisible(false)}}>\r\n                    <span className=\"material-icons text-info mr-2\">person</span>\r\n                        {t('My Profile')}\r\n                    </Link>\r\n                    <span className=\"dropdown-item d-flex p-2\" onClick={onLogoutSuccess} style={{cursor: 'pointer'}}>\r\n                    <span class=\"material-icons text-danger mr-2\">power_settings_new</span>\r\n\r\n                        {t('Logout')}\r\n                    </span>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"shadow-sm bg-light mb-2\">\r\n            <nav className=\"navbar navbar-light container navbar-expand\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img src={logo} width=\"60\" alt=\"Tweety Logo\" />\r\n                    Tweety\r\n                </Link>\r\n                {links}\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default (TopBar);","import React from 'react';\nimport UserSignupPage from '../pages/UserSignupPage';\nimport LoginPage from '../pages/LoginPage';\nimport LanguageSelector from '../components/LanguageSelector';\nimport HomePage from '../pages/HomePage'\nimport UserPage from '../pages/UserPage'\nimport {HashRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport TopBar from '../components/TopBar';\nimport {useSelector} from 'react-redux';\n\nconst App = () =>   {\n\n  const {isLoggedIn} = useSelector((store) => ({\n    isLoggedIn: store.isLoggedIn\n  }))\n\n  //login durumdayken login sayfası açılmayacak.\n  return (\n    <div>\n      <Router>\n        <TopBar />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}/>\n          {!isLoggedIn && (<Route path=\"/login\" component={LoginPage} />)}\n          <Route path=\"/signup\" component={UserSignupPage} />\n          <Route path=\"/user/:username\" component={UserPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n      <LanguageSelector />\n    </div>\n  );\n}\n\nexport default App;\n","import { act } from 'react-dom/test-utils';\r\nimport * as ACTIONS from './Constants'\r\n\r\nconst defaultState = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined\r\n};\r\n\r\nconst authReducer = (state = {... defaultState}, action) => {\r\n    if(action.type == ACTIONS.LOGOUT_SUCCESS){ \r\n        return defaultState;\r\n    } \r\n    else if (action.type == ACTIONS.LOGIN_SUCCESS){\r\n        return {\r\n            ... action.payload,\r\n            isLoggedIn: true\r\n        }\r\n    }\r\n    else if (action.type == ACTIONS.UPDATE_SUCCESS){\r\n        return {\r\n            ... state, ... action.payload\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default authReducer;","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport authReducer from './authReducer'\r\nimport SecureLS from 'secure-ls'\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n    const tweetyAuth = secureLs.get('tweety-auth');\r\n\r\n    let stateInLocalStorage = {\r\n        isLoggedIn: false,\r\n        username: undefined,\r\n        displayName: undefined,\r\n        image: undefined,\r\n        password: undefined   \r\n    }\r\n\r\n    if(tweetyAuth){\r\n        return tweetyAuth;\r\n    }\r\n    return stateInLocalStorage;\r\n}\r\n\r\nconst updateStateInStorage = newState => {\r\n    secureLs.set('tweety-auth', newState);\r\n}\r\n\r\nconst configureStore = () => {\r\n    const initialState = getStateFromStorage();\r\n    setAuthorizationHeader(initialState);\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n    store.subscribe(() => {\r\n        updateStateInStorage(store.getState());\r\n        setAuthorizationHeader(store.getState());\r\n    });\r\n\r\n    return store;\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootsrap-override.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './i18n'\r\nimport App from './container/App';\r\nimport {Provider} from 'react-redux'\r\nimport configureStore from './redux/configureStore';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n   <Provider store = {store}>\r\n         <App/>\r\n   </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}